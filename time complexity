تابع "convert_to_postfix" 

1. حلقه کلی: 
    - این حلقه «i» را از 0  تا«expression.size() - 1» تکرار می کند بنابراین پیچیدگی زمانی این حلقه O(n) است که n طول عبارت است.

2. کنترل پرانتز:
    - اگر کاراکتر فعلی '(' باشد، تابع عملیات push را روی استک اپراتور انجام می دهد که O(1)
    - اگر کاراکتر فعلی ')' باشد، تابع عملیات زیر را انجام می دهد:
      - شمارش پرانتز را 1 افزایش می دهد O(1)
      - عملگرها را از پشته عملگر بیرون می آورد و آنها را به پشته postfix هل می دهد تا زمانی که با ')' مواجه شود یا پشته عملگر خالی شود. عملیات popping و عملیات هل دادن هر کدام O(1)
      - اگر پشته اپراتور خالی باشد، تابع 'error_handling' را فراخوانی می کند که O(1)
      - با انجام عملیات pop، که زمان O(1)، '(' را از پشته عملگر حذف می کند.

      پیچیدگی کلی زمانی برای مدیریت پرانتزها O(1) است.

3. مدیریت اعداد منفی:
    - برای مواردی که کاراکتر فعلی یک علامت '-' و کاراکتر بعدی یک رقم است، تابع عملیات زیر را انجام می دهد:
      - یک رشته «تعداد» با مقدار «-» را مقدار دهی اولیه می کندO(1) 
      - کاراکترهای رقم بعدی را تا زمانی که با یک کاراکتر غیر رقمی یا یک نقطه اعشار روبرو شود به رشته "عدد" اضافه می کند. O(K)
      - اگر طول رشته «تعداد» بزرگتر از 1 باشد O(K)
      - در غیر این صورت، مقدار عددی عدد منفی را محاسبه می کند و آن را به پشته postfix هل می دهدO(k)

      پیچیدگی کلی زمانی برای رسیدگی به اعداد منفی O(k) است که k تعداد ارقام در عدد منفی است.

4. مدیریت عملگرها، ثابت ها و مقادیر عددی:
    پیچیدگی کلی زمانی برای مدیریت عملگرها، ثابت ها و مقادیر عددی O(1) است.

5. عملیات نهایی:
    - بعد از حلقه، تابع بررسی می کند که آیا تعداد پرانتزهای باز و بسته برابر است یا خیرO(1)
    - عملگرهای باقیمانده را از پشته عملگر بیرون می آورد و آنها را به پشته postfix هل می دهد. در بدترین حالت O(n)
    - ترتیب عناصر موجود در پشته postfix را معکوس می کند و آنها را در متغیر `reversedPostfixStack` ذخیره می کند. O(n)

    پیچیدگی زمانی کلی برای عملیات نهایی O(n) است.

 به طور کلی پیچیدگی زمانی تابع "convert_to_postfix" O(n) 



تابع «calculate  »
    - تابع وارد یک حلقه می شود، که تا زمانی که پشته 'postfix' خالی شود ادامه می یابد.
    - در هر تکرار، تابع عملیات زیر را انجام می دهد:
      - بررسی اینکه آیا عنصر ظاهر شده یک عملگر است یا خیر. O(n)
      - اگر عنصر ظاهر شده یک عملگر باشد، تابع بر اساس نوع عملگر، عملیات حسابی را انجام می دهد. این عملیات های حسابی مانند جمع، تفریق، ضرب، تقسیم، توان و فاکتوریل هر کدام O(n)

به طور خلاصه، پیچیدگی زمانی تابع  O(n) 
